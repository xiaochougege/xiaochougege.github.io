<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World!</title>
    <url>/archives/1c291ca3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我的第一篇博客!!!</p>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux基础</title>
    <url>/archives/a4a81253.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a><center>Linux基础</h1><hr>
<h2 id="一-Linux起源"><a href="#一-Linux起源" class="headerlink" title="一. Linux起源"></a>一. Linux起源</h2><h3 id="1-Linux历史"><a href="#1-Linux历史" class="headerlink" title="1.Linux历史"></a>1.Linux历史</h3><ul>
<li>1969年，美国 AT&amp;T 公司贝尔实验室开发了 UNIX 操作系统</li>
<li>1983年，理查德·斯托曼在MIT发起了GNU计划，并诞生了GPL</li>
<li>1991年，林纳斯·托瓦兹在大学时期编写并发布了Linux内核</li>
<li>随后诞生了许多基于Linux内核的操作系统，称作Linux发行版</li>
<li>Linunx的发行版非常多,例如：Debian,Red Hat等分支</li>
<li><img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241920079.png"></li>
<li>其中Ubuntu因为其图形界面相对比较完善,对新手入门比较友好.</li>
<li>本篇博客示例皆以Ubuntu为例</li>
</ul>
<h3 id="2-身边的Linux"><a href="#2-身边的Linux" class="headerlink" title="2.身边的Linux"></a>2.身边的Linux</h3><ul>
<li>Android其实本质上是Linux的一个发行版;</li>
<li>平常的大多数服务器也是Linux的发行版;</li>
<li>嵌入式开发板常用Linux系统.</li>
</ul>
<hr>
<h2 id="二-选择Linux的原因"><a href="#二-选择Linux的原因" class="headerlink" title="二. 选择Linux的原因"></a>二. 选择Linux的原因</h2><ul>
<li>开源:由于Linux是一个开源的操作系统,参照Linux系统,可以加深自己对于操作系统的了解;</li>
<li>安全:Linux拥有广泛,规模较大的社区维护,并且基本上四年一次更新换代,bug可以及时得到修复;</li>
<li>稳定:跟window操作系统不一样,Linux系统具有较好的稳定性,可以不间断地运行很长一段时间,不会轻易出现诸如蓝屏警告的问题,所以Linux比较适合做服务器.</li>
<li>多数没有GUI界面:通过学习Linux系统,间接掌握shell的使用方法,同时习惯命令行之后,效率可以得到大幅提高.</li>
</ul>
<hr>
<h2 id="三-window下使用Linux"><a href="#三-window下使用Linux" class="headerlink" title="三. window下使用Linux"></a>三. window下使用Linux</h2><h3 id="1-虚拟机"><a href="#1-虚拟机" class="headerlink" title="1.虚拟机"></a>1.虚拟机</h3><p>虚拟机可以视为一个安全可靠的沙盒,通过虚拟机来使用有以下优点:</p>
<ul>
<li>独立:不影响当前操作系统的使用;</li>
<li>无需考验底层应用的兼容性;</li>
<li>方便试错,不会危害本机数据.<br><strong>安装虚拟机</strong>:</li>
<li>主流软件: <a href="https://blog.csdn.net/weixin_45912291/article/details/108901106">VMware</a>,<a href="https://zhuanlan.zhihu.com/p/317188273">virtual Box</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/">Ubuntu安装(推荐使用清华镜像)</a></li>
</ul>
<h3 id="2-WSL"><a href="#2-WSL" class="headerlink" title="2.WSL"></a>2.WSL</h3><ul>
<li><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install%E3%80%82">WSL全名:Windows Subsystem for Linux</a></li>
<li>wsl可让开发人员直接在 Windows 上按原样运行 GNU&#x2F;Linux 环境（包括大多数命令行工具、实用工具和应用程序），且不会产生传统虚拟机或双启动设置开销</li>
<li>wsl1与wsl2的区别:<br> <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241923359.png"></li>
<li>以管理员身份打开powershell, 执行wsl –install, 随后重启计算机<br>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241934756.png"></li>
</ul>
<h3 id="3-双系统-不推荐"><a href="#3-双系统-不推荐" class="headerlink" title="3.双系统(不推荐)"></a>3.双系统(不推荐)</h3><ul>
<li>在安装过程中不理解关键的选项（如：磁盘分区、挂载、交换空间<br>分配等）的意义，很容易做出错误的决定；</li>
<li>错误的配置可能导致自己原先本机上的操作系统和数据遭到不可逆<br>转的损坏；</li>
<li>部分硬件可能对安装的发行版缺少兼容，从而导致意外安装失败；</li>
<li>如果安装的过程中选择下载附加工具，可能会因为默认镜像在国外<br>而导致下载十分缓慢，从而让安装流程变得很漫长；</li>
</ul>
<hr>
<h2 id="四-连接Linux服务器"><a href="#四-连接Linux服务器" class="headerlink" title="四. 连接Linux服务器"></a>四. 连接Linux服务器</h2><ul>
<li>前提:拥有服务器和账号;</li>
<li></li>
</ul>
<hr>
<h2 id="五-常见命令"><a href="#五-常见命令" class="headerlink" title="五. 常见命令"></a>五. 常见命令</h2><ul>
<li>目录结构: &#x2F;home&#x2F;username&#x2F;ding&#x2F;<br>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241935968.png"></li>
<li>显示当前的目录: pwd ———(print work directory)</li>
<li>当前目录新建文件夹: mkdir xxx.txt ——(make directory)</li>
<li>当前目录新建文件: touch xxx.c </li>
<li>进入指定目录: cd xxx,txt ————(change directory)</li>
<li>进入上一层目录: cd ..</li>
<li>查看当前目录文件: ls —————(list)</li>
<li>查看当前目录所有文件: ls -a ———(all)</li>
<li>列出文件详细信息: ls -l filename  —–(此处不会列出隐藏文件)</li>
<li>列出文件详细信息: ll —————(列出所有信息,包括隐藏的)</li>
<li>删除文件: rm a.cpp —————-(remove)</li>
<li>删除目录: rm -r filename</li>
<li>删库跑路: rm -rf &#x2F;*   ————–(注意)</li>
<li>移动文件: mv a.cpp filename&#x2F;</li>
<li>复制文件: cp a.pp filename&#x2F;</li>
<li>复制目录下所有文件: cp -r a filename</li>
<li>清屏: clear</li>
<li>显示最近执行的n条命令: history n</li>
<li>执行历史命令: !!+id</li>
<li>查看文件内容: cat a.cpp</li>
<li>输出: echo hello,world!</li>
<li>覆盖: echo ‘hello,world’ &gt; a.txt</li>
<li>追加: echo ‘welcome!’ &gt;&gt; a.txt</li>
<li>安装软件包: apt install g++</li>
<li>更新: apt update <name></li>
<li>查找: apt search <name></li>
<li>删除: apt remove <name></li>
<li>提升权限: sudo apt install g++</li>
</ul>
<hr>
<h2 id="六-vim"><a href="#六-vim" class="headerlink" title="六. vim"></a>六. vim</h2><p>vim是从vi发展而来的一个文本编辑器，对于编写程序比较方便。作为一门古老的文本编辑器,使用Vim可以大大提高编程效率.同时,<strong>它的学习成本颇为高昂</strong>.<br><em>学习vim是一个曲折的过程,但是如果仅仅只是作为了解并粗略使用的话,熟悉以下流程图就足够了.</em><br>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241937183.png"></p>
<ul>
<li>i 切换到输入模式，可以修改文件内容</li>
<li>r 切换到取代模式，可以修改文件内容</li>
<li>Esc从输入模式退出到命令模式</li>
<li>在命令模式下:<ul>
<li>输入:q 不保存退出</li>
<li>输入:w 保存</li>
<li>输入:wq 保存并退出</li>
<li>输入:wq! 强制保存并退出</li>
</ul>
</li>
</ul>
<p><em>以下vim的键盘图,感兴趣的可以尝试研究,但我认为作为一门工具,如果学习成本过高,这门工具学习的优先度不高</em></p>
<h2 id=""><a href="#" class="headerlink" title="  "></a>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241938896.png"></h2><h2 id="七-SSH"><a href="#七-SSH" class="headerlink" title="七. SSH"></a>七. SSH</h2><ul>
<li><p>SSH(Secure Shell) 是建立在应用层基础上的安全协议，可以用其远程登录服务器&#x2F;其他电脑;</p>
</li>
<li><p>SSH的登录流程(可参考计算机网络的第七章内容)<br>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241939531.png"></p>
</li>
<li><p>本地生成密钥</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">cd ~/.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure></li>
<li><p>将公钥添加到&#x2F;home&#x2F;user&#x2F;.ssh&#x2F;authorized_keys即可免密登录</p>
</li>
<li><p>ssh remote_username@remote_address</p>
<ul>
<li>ssh remote_username是服务器端的用户名</li>
<li>remote_address是服务器地址,可以是ip&#x2F;域名</li>
</ul>
</li>
<li><p>SCP(Secure Copy)是Linux系统下基于SSH登陆进行安全的远程文件拷贝<br>命令。</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp remote_username@remote_address:remote_filename local_folder//从服务器拷贝到本地</span><br><span class="line"></span><br><span class="line">scp local_file remote_username@remote_address:remote_folder//•从本地拷贝到服务器</span><br><span class="line"></span><br><span class="line">scp –r local_file remote_username@remote_address:remote_folder//对于文件夹需加参数-r</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h2 id="八-文件权限"><a href="#八-文件权限" class="headerlink" title="八. 文件权限"></a>八. 文件权限</h2><ul>
<li><p>Linux文件权限分为三级:文件所有者(owner)、用户组(group)、<br>其他用户(other users)</p>
</li>
<li><p>查看权限:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -l</span><br><span class="line">ll</span><br></pre></td></tr></table></figure></li>
</ul>
<p>如图所示:<br>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241940876.png"><br>解读:</p>
<ul>
<li><p>首位表示文件类型</p>
<ul>
<li>d:文件夹</li>
<li>-:文件</li>
</ul>
</li>
<li><p>接下来每三位一组，分别代表所有者、用户组、其他用户的权限</p>
</li>
<li><p>每一组可以使用八进制数表示，也可以使用形如g&#x3D;rx表示</p>
<ul>
<li>u(user) g(group) o(others) a(all)</li>
</ul>
</li>
<li><p>chmod(change mode)是用来控制用户对文件的权限的命令</p>
</li>
<li><p>注意:只有文件所有者和超级管理员才可以修改权限</p>
</li>
<li><p>如何修改权限:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.使用字符:</span><br><span class="line">chmod a+r filename (等价于 chmod ugo+r filename)</span><br><span class="line">chmod u+w filename </span><br><span class="line">chmod ug+x,o-w filename </span><br><span class="line">chmod ug=rw,o=rx filename </span><br><span class="line">2.使用八进制数:</span><br><span class="line">chmod 777 filename (等价于 chmod a=rwx filename)</span><br><span class="line">chmod 700 filename (等价于 chmod u=rwx,go= filename)</span><br></pre></td></tr></table></figure>
<h2 id="-1"><a href="#-1" class="headerlink" title="  "></a>  <img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241941192.png"></h2></li>
</ul>
<h2 id="九-tmux"><a href="#九-tmux" class="headerlink" title="九. tmux"></a>九. tmux</h2><ul>
<li>以前我们应该经常在电影中看到黑客们屏幕前滚动的帅气的终端窗口,tmux(terminal multiplexer)是一个终端复用器,它能实现在终端中同时运行多个会话,大大提高效率.<br><img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241943979.png"><br><img src="https://gcore.jsdelivr.net/gh/xiaochougege/picture.bed/img/202303241942994.png"></li>
<li>会话(session):每次打开终端窗口(window)，输入命令。这种用户与计算机临时的交互，称作一次“会话”。每个会话都是一个独立工作区，包含一到多个窗口。</li>
<li>会话的一个特点是，窗口与其中启动的进程绑定。</li>
<li>tmux的一些基本操作:</li>
<li>安装tmux:sudo apt install tmux</li>
<li>打开tmux:tmux</li>
<li>退出tmux界面<ul>
<li>Ctrl+b后再输入d</li>
<li>Ctrl+d</li>
<li>输入exit</li>
<li>前缀键:输入Ctrl+b后，再输入的指令才会生效</li>
</ul>
</li>
<li>新建会话:tmux new -s <session_name></li>
<li>分离会话<ul>
<li>tmux detach</li>
<li>Ctrl+b d</li>
</ul>
</li>
<li>查看所有会话:tmux ls</li>
<li>接入会话: tmux attach –t <session_name></li>
<li>杀死会话:tmux kill-session -t <session_name></li>
<li>切换会话:tmux switch -t <session_name></li>
<li>重命名会话<ul>
<li>tmux rename-session -t 0 <new_name></li>
<li>Ctrl+b $ 重命名当前会话</li>
</ul>
</li>
<li>新建窗口: Ctrl+b c</li>
<li>切换窗口<ul>
<li>Ctrl+b num</li>
<li>Ctrl+b p</li>
<li>Ctrl+b n</li>
</ul>
</li>
<li>窗口划分<ul>
<li>Ctrl+b “ 上下</li>
<li>Ctrl+b % 左右</li>
<li>Ctrl+b +上下左右 切换pane</li>
</ul>
</li>
</ul>
<hr>
<h2 id="十-其他"><a href="#十-其他" class="headerlink" title="十. 其他"></a>十. 其他</h2><ul>
<li>环境变量<ul>
<li>指的是在操作系统中用来指定操作系统运行环境的一些参数，如系统文<br>件夹的位置</li>
<li>当系统执行一个程序而没有告知程序所在的完整路径时，系统除了在当前文件夹下寻找外，还会前往PATH指定路径中寻找。</li>
</ul>
</li>
<li>Linux下环境变量<ul>
<li>echo $PATH可以查看当前PATH环境变量<br>环境变量存放在~&#x2F;.bashrc中</li>
<li>source <del>&#x2F;.bashrc可以立即启用<br>每次打开shell都会执行</del>&#x2F;.bashrc</li>
</ul>
</li>
<li>内部命令 &#x2F;bin<ul>
<li>shell自带的命令，例如cd&#x2F;echo&#x2F;kill</li>
<li>效率比较高</li>
<li>内置有说明文档, help cd</li>
</ul>
</li>
<li>外部命令<ul>
<li>自己写的shell脚本，以及find等命令</li>
</ul>
</li>
<li>判断<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type cd</span><br><span class="line">type find</span><br></pre></td></tr></table></figure></li>
<li>挂起与恢复进程:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ctrl+z//可以将在前台运行的命令放到后台，并暂停</span><br><span class="line">jobs//可以查看当前在后台运行的命令</span><br><span class="line">fg %num//将后台命令调至前台</span><br><span class="line">bg %num//将后台暂停的进程在后台执行</span><br><span class="line">kill %num//终止命令编号为num的进程</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>web_lab</tag>
      </tags>
  </entry>
  <entry>
    <title>cs50系列1</title>
    <url>/archives/a9531e6a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CS50-week1"><a href="#CS50-week1" class="headerlink" title="CS50-week1"></a><center>CS50-week1</h1><hr>
<h2 id="1-Hello"><a href="#1-Hello" class="headerlink" title="1. Hello"></a>1. Hello</h2><p>开篇作业，prset1.1非常简单，就是简单地在屏幕打印出每一个人编程时的第一句”Hello,World!”。当然prset1.1与众不同在于cs50基于vscode这个编辑器创建了一个codespace。在这个沙盒之中，我们需要自己安装Mingw编译器，同时该沙盒也ssh到了我们的Github上并且具有评分系统等多种功能，非常方便，一度让我感觉非常惊艳。peset1.1主要还是熟悉了一些shell指令，诸如<strong>wget,unzip,rm,cd,ls,pwd…</strong>,同时也了解到如何通过命令行来编译.c文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># include&lt;stdio.h&gt;</span><br><span class="line"># include&lt;cs50.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    string name = get_string(&quot;What is your name?&quot;);</span><br><span class="line">    printf(&quot;hello world! %s\n&quot;, name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="2-Mario"><a href="#2-Mario" class="headerlink" title="2. Mario"></a>2. Mario</h2><p>第二个作业prset1.2主要是基于超级马里奥这个游戏关卡存在的障碍物来设计。简单来说，就是打印一个正向直角三角形和反向直角三角形，算法部分比较简单。<br><strong>对于反向三角形</strong>：</p>
<ol>
<li>首先循环n行，一个简单的for循环；</li>
<li>每行开始打印空格，经过观察发现，空格数依次减少，依旧是一个for循环，空格数为：n - 1；</li>
<li>开始打印 # ，也是一个简单的for循环，# 符号依次递增，数量与行数相等；</li>
</ol>
<p><strong>对于正向三角形</strong>：</p>
<ol>
<li>同样首先循环n行，使用简单for循环；</li>
<li>每行开始打印#，数目与行数相同。</li>
</ol>
<p><strong>mario-less</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;cs50.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int height;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        height = get_int(&quot;Height:&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    while (height &lt; 1 || height &gt; 8);</span><br><span class="line">    //printf(&quot;stored:%d\n&quot;, height);</span><br><span class="line">    for (int i = 0; i &lt; height; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int j = 1;j &lt; height - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        for (int k = 0;k &lt; i + 1; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;#&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    /*int i,j = 0;</span><br><span class="line">    for (i = 0;i &lt; height; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for (j = 0;j &lt; i+1; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;#&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>mario-more</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;cs50.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int height;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        height = get_int(&quot;Height:&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    while (height &lt; 1 || height &gt; 8);</span><br><span class="line">    for (int i = 0; i &lt; height; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int j = 1; j &lt; height - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        for (int k = 0 ; k &lt; i + 1; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;#&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;  &quot;);</span><br><span class="line">        for (int a = 0; a &lt; i + 1; a++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;#&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="3-cash"><a href="#3-cash" class="headerlink" title="3. cash"></a>3. cash</h2><p>该作业主要考察抽象思维，同时也运用了一个贪心算法，但是我最大的收获还是了解到了各种硬币之间的大小关系。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;cs50.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int get_cents(void);</span><br><span class="line">int calculate_quarters(int cents);</span><br><span class="line">int calculate_dimes(int cents);</span><br><span class="line">int calculate_nickels(int cents);</span><br><span class="line">int calculate_pennies(int cents);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    // Ask how many cents the customer is owed</span><br><span class="line">    int cents = get_cents();</span><br><span class="line"></span><br><span class="line">    // Calculate the number of quarters to give the customer</span><br><span class="line">    int quarters = calculate_quarters(cents);</span><br><span class="line">    cents = cents - quarters * 25;</span><br><span class="line"></span><br><span class="line">    // Calculate the number of dimes to give the customer</span><br><span class="line">    int dimes = calculate_dimes(cents);</span><br><span class="line">    cents = cents - dimes * 10;</span><br><span class="line"></span><br><span class="line">    // Calculate the number of nickels to give the customer</span><br><span class="line">    int nickels = calculate_nickels(cents);</span><br><span class="line">    cents = cents - nickels * 5;</span><br><span class="line"></span><br><span class="line">    // Calculate the number of pennies to give the customer</span><br><span class="line">    int pennies = calculate_pennies(cents);</span><br><span class="line">    cents = cents - pennies * 1;</span><br><span class="line"></span><br><span class="line">    // Sum coins</span><br><span class="line">    int coins = quarters + dimes + nickels + pennies;</span><br><span class="line"></span><br><span class="line">    // Print total number of coins to give the customer</span><br><span class="line">    printf(&quot;%i\n&quot;, coins);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int get_cents(void)</span><br><span class="line">&#123;</span><br><span class="line">    // TODO</span><br><span class="line">    int cents;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        cents = get_int(&quot;Change owed: &quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    while (cents &lt; 0);</span><br><span class="line">    return cents;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int calculate_quarters(int cents)</span><br><span class="line">&#123;</span><br><span class="line">    // TODO</span><br><span class="line">    int quarters = 0;</span><br><span class="line">    while (cents &gt;= 25)</span><br><span class="line">    &#123;</span><br><span class="line">        cents = cents - 25;</span><br><span class="line">        quarters++;</span><br><span class="line">    &#125;</span><br><span class="line">    return quarters;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int calculate_dimes(int cents)</span><br><span class="line">&#123;</span><br><span class="line">    // TODO</span><br><span class="line">    int dimes = 0;</span><br><span class="line">    while (cents &gt;= 10)</span><br><span class="line">    &#123;</span><br><span class="line">        cents = cents - 10;</span><br><span class="line">        dimes++;</span><br><span class="line">    &#125;</span><br><span class="line">    return dimes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int calculate_nickels(int cents)</span><br><span class="line">&#123;</span><br><span class="line">    // TODO</span><br><span class="line">    int nikels = 0;</span><br><span class="line">    while (cents &gt;= 5)</span><br><span class="line">    &#123;</span><br><span class="line">        cents = cents - 5;</span><br><span class="line">        nikels++;</span><br><span class="line">    &#125;</span><br><span class="line">    return nikels;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int calculate_pennies(int cents)</span><br><span class="line">&#123;</span><br><span class="line">    // TODO</span><br><span class="line">    int pennies = 0;</span><br><span class="line">    while (cents &gt;= 1)</span><br><span class="line">    &#123;</span><br><span class="line">        cents = cents - 1;</span><br><span class="line">        pennies++;</span><br><span class="line">    &#125;</span><br><span class="line">    return pennies;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="4-credit"><a href="#4-credit" class="headerlink" title="4. credit"></a>4. credit</h2><p>prset1.4相对比较难，讲述了一个卢恩算法，了解到如何判断一张银行卡是否合规。算法部分主要是削减数位，保留数位，判断奇偶,相对简单。但是判断的条件比较多，非常容易缺漏。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;cs50.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    long card;</span><br><span class="line">    //get input</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        card = get_long(&quot;Number: &quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    while (card &lt; 0);</span><br><span class="line">    //calculate</span><br><span class="line">    int digital = 0;</span><br><span class="line">    int num = 0;</span><br><span class="line">    int count = 0;</span><br><span class="line">    int num2 = 0;</span><br><span class="line">    int num1 = 0;</span><br><span class="line">    int num_2 = 0;</span><br><span class="line">    while (card &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        num_2 = num;</span><br><span class="line">        num = card % 10;</span><br><span class="line">        digital ++;</span><br><span class="line">        if (digital % 2 == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            num2 = num * 2;</span><br><span class="line">            count = count + ((num2 % 10) + (num2 / 10));</span><br><span class="line">        &#125;</span><br><span class="line">        if (digital % 2 != 0)</span><br><span class="line">        &#123;</span><br><span class="line">            num1 += num;</span><br><span class="line">        &#125;</span><br><span class="line">        card /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    int all = num * 10 + num_2;</span><br><span class="line">    int add = count + num1;</span><br><span class="line">    if ((all &gt; 50 &amp;&amp; all &lt; 56) &amp;&amp; digital == 16 &amp;&amp; add % 10 == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;MASTERCARD\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else if ((all == 34 || all == 37) &amp;&amp; add % 10 == 0 &amp;&amp; digital == 15)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;AMEX\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else if (num == 4 &amp;&amp; add % 10 == 0 &amp;&amp; (digital == 13 || digital == 16))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;VISA\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;INVALID\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>cs50</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/archives/0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
</search>
